{"version":3,"sources":["Typesense/ApiCall.js"],"names":["APIKEYHEADERNAME","buildLocationUrl","host","port","hostFragments","split","length","join","ApiCall","configuration","_configuration","_defaultNode","_defaultNodeIndex","endpoint","node","nodeIndex","readReplicaNodes","protocol","console","log","masterNode","apiKey","defaultHeaders","_apiKey","parameters","performRequest","undefined","requestType","queryParameters","bodyParameters","additionalHeaders","validate","requestOptions","method","url","_uriFor","headers","Object","assign","_defaultHeaders","params","data","then","response","Promise","resolve","catch","error","responseMessage","request","path","message","reject","Error","module","exports"],"mappings":"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","file":"ApiCall.js","sourcesContent":["'use strict'\nimport axios from 'axios'\n\nconst APIKEYHEADERNAME = 'X-TYPESENSE-API-KEY'\n\nconst buildLocationUrl = function(host, port) {\n  // if the host is a non-root URL, such as example.com/typesense\n  // then the port number cannot be appended, as example.com/typesense:8108\n  // instead it must be example.com:8108/typesense\n  let hostFragments = host.split(\"/\");\n  if (hostFragments.length > 1) {\n    hostFragments[0] = hostFragments[0] + `:${port}`\n    return hostFragments.join(\"/\")\n  }\n  return `${host}:${port}`\n}\nclass ApiCall {\n  constructor (configuration) {\n    this._configuration = configuration\n    this._defaultNode = 'master'\n    this._defaultNodeIndex = 0\n  }\n\n  _uriFor (endpoint, node = this._defaultNode, nodeIndex = this._defaultNodeIndex) {\n    if (node === 'readReplica') {\n      return `${this._configuration.readReplicaNodes[nodeIndex].protocol}://${buildLocationUrl(this._configuration.readReplicaNodes[nodeIndex].host, this._configuration.readReplicaNodes[nodeIndex].port)}${endpoint}`\n    } else {\n      console.log(`${buildLocationUrl(this._configuration.masterNode.host, this._configuration.masterNode.port)}`)\n      return `${this._configuration.masterNode.protocol}://${buildLocationUrl(this._configuration.masterNode.host, this._configuration.masterNode.port)}${endpoint}`\n    }\n  }\n\n  _apiKey (node = this._defaultNode, nodeIndex = this._defaultNodeIndex) {\n    if (node === 'readReplica') {\n      return this._configuration.readReplicaNodes[nodeIndex].apiKey\n    } else {\n      return this._configuration.masterNode.apiKey\n    }\n  }\n\n  _defaultHeaders (node = this._defaultNode, nodeIndex = this._defaultNodeIndex) {\n    let defaultHeaders = {}\n    defaultHeaders[APIKEYHEADERNAME] = this._apiKey(node, nodeIndex)\n    defaultHeaders['Content-Type'] = 'application/json'\n    defaultHeaders['Accept'] = 'application/json'\n    return defaultHeaders\n  }\n\n  get (endpoint, parameters = {}, node = this._defaultNode, nodeIndex = this._defaultNodeIndex) {\n    return this.performRequest('get', endpoint, parameters, undefined, undefined, node, nodeIndex)\n  }\n\n  delete (endpoint, parameters = {}, node = this._defaultNode, nodeIndex = this._defaultNodeIndex) {\n    return this.performRequest('delete', endpoint, parameters, undefined, undefined, node, nodeIndex)\n  }\n\n  post (endpoint, parameters = {}) {\n    return this.performRequest('post', endpoint, undefined, parameters, undefined, 'master')\n  }\n\n  performRequest (requestType, endpoint, queryParameters = {}, bodyParameters = {}, additionalHeaders = {}, node = this._defaultNode, nodeIndex = this._defaultNodeIndex) {\n    this._configuration.validate()\n\n    const requestOptions = {\n      method: requestType,\n      url: this._uriFor(endpoint, node, nodeIndex),\n      headers: Object.assign({}, this._defaultHeaders(node, nodeIndex), additionalHeaders),\n      params: queryParameters,\n      data: bodyParameters\n    }\n\n    return axios(requestOptions)\n      .then((response) => {\n        return Promise.resolve(response.data)\n      })\n      .catch((error) => {\n        if (requestType === 'get') {\n          if (node === 'master' && this._configuration.readReplicaNodes.length > 0) {\n            return this.performRequest(requestType, endpoint, queryParameters, bodyParameters, additionalHeaders, 'readReplica', 0)\n          } else if (node === 'readReplica') {\n            if (nodeIndex >= (this._configuration.readReplicaNodes.length - 1)) {\n              // error, but we'll let the code outside the if...else return the error\n            } else {\n              return this.performRequest(requestType, endpoint, queryParameters, bodyParameters, additionalHeaders, node, nodeIndex + 1)\n            }\n          }\n        }\n\n        let responseMessage = ''\n        if (error.response !== undefined) {\n          responseMessage = ` - ${error.response.request.path} - ${error.response.data.message}`\n        }\n        return Promise.reject(new Error(`${error.message}${responseMessage}`))\n      })\n  }\n}\n\nmodule.exports = ApiCall\n"]}